//
//  main.c
//  test2
//
//  Created by lijiacheng on 2017/3/18.
//  Copyright © 2017年 lijiacheng. All rights reserved.
//

#include<stdio.h>
int main()
{
    const int SIZE=3;
    int board[SIZE][SIZE];
    int i,j;
    int numofx[2]={0};
    int numofo[2]={0};
    int result=-1;  // -1没人赢,  1:x赢, 0:o赢,
    printf("输入3*3矩阵：\n");
    //  读入矩阵
    for(i=0;i<SIZE;i++){
        for(j=0;j<SIZE;j++){
            scanf("%d",&board[i][j]);
        }
    }
    //  检查行；
    for(i=0;i<SIZE && result==-1;i++){
        for(j=0;j<SIZE;j++){
            if(board[i][j]==1){
                numofx[0]++;
            }else{
                numofo[0]++;
            }
            // 检查列；
            if(board[j][i]==1){
                numofx[1]++;
            }else{
                numofo[1]++;
            }
        }
        if(numofo[0]==SIZE || numofo[1]==SIZE){
            result=0;
        }else if(numofx[0]==SIZE || numofx[1]==SIZE){
            result=1;
        }
    }
    // 检查对角线;
    int numofo2,numofx2;
    numofo2=numofx2=0;
    for(i=0;i<SIZE && result==-1;i++){
        if(board[i][i]==1){
            numofx2++;
        }else if(board[i][i]==0){
            numofo2++;
        }
        if(numofo2==SIZE){
            result=0;
        }else if(numofx2==SIZE){
            result=1;
        }
    }
    numofx2=numofo2=0;
    for(i=0;i<SIZE && result==-1;i++){
        if(board[i][SIZE-i-1]==1){
            numofx2++; 
        }else if(board[i][SIZE-i-1]==0){
            numofo2++;
        }
        if(numofo2==SIZE){
            result=0;
        }else if(numofx2==SIZE){
            result=1;
        }
    }
    printf("矩阵为:\n");
    for(i=0; i<3; i++)
    {
        for(j=0; j<3; j++)
        {
            printf("%d\t",board[i][j]);
        }
        printf("\n");
    }

    if(result==1){
        printf("numofx赢了。\n");
    }else if(result==0){
        printf("numofo赢了。\n");
    }else {
        printf("谁都没赢。\n");
    }
    
    return 0;
}
